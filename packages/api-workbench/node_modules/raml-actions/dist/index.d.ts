import contextActions = require("./actionManagement/contextActions");
import sharedStateCalculator = require("./actionManagement/sharedASTStateCalculator");
import contextMenu = require("./actionManagement/contextMenu");
export import uiActions = require("./actions/uiActions");
export import standardActions = require("./actions/standardActions");
export import parser = sharedStateCalculator.parser;
export declare type IContextStateCalculator = contextActions.IContextStateCalculator;
export declare type IActionItemCallback = contextActions.IActionItemCallback;
export declare type IActionVisibilityFilter = contextActions.IActionVisibilityFilter;
export declare type IContextDependedAction = contextActions.IContextDependedAction;
export declare type IExecutableAction = contextActions.IExecutableAction;
export declare type IStateConvertor = contextActions.IStateConvertor;
export declare type IUIDisplay = contextActions.IUIDisplay;
export declare type IContextDependedUIAction = contextActions.IContextDependedUIAction;
export declare var TARGET_RAML_EDITOR_NODE: string;
export declare var TARGET_RAML_TREE_VIEWER_NODE: string;
export declare function addAction(action: IContextDependedAction): void;
export declare function addSimpleAction(name: string, category: string[], target: string, onClick: IActionItemCallback, shouldDisplay?: IActionVisibilityFilter): void;
export declare function calculateCurrentActions(target: string): IExecutableAction[];
export declare function getCategorizedActionLabel(action: IExecutableAction): string;
export declare type IPoint = sharedStateCalculator.IPoint;
export declare type IRange = sharedStateCalculator.IRange;
export declare type IEditorTextBuffer = sharedStateCalculator.IEditorTextBuffer;
export declare type IAbstractTextEditor = sharedStateCalculator.IAbstractTextEditor;
export declare type IGeneralASTState = sharedStateCalculator.IGeneralASTState;
export declare type IEditorProvider = sharedStateCalculator.IEditorProvider;
export declare type IASTProvider = sharedStateCalculator.IASTProvider;
export declare type IASTModifier = sharedStateCalculator.IASTModifier;
export declare class CommonASTStateCalculator implements contextActions.IContextStateCalculator {
    calculate(): any;
    getGeneralState(): IGeneralASTState;
    contextCalculationStarted: () => void;
    contextCalculationFinished: () => void;
    getEditor(): IAbstractTextEditor;
}
export declare function setEditorProvider(editorProvider: IEditorProvider): void;
export declare function setASTProvider(astProvider: IASTProvider): void;
export declare function setASTModifier(astModifier: IASTModifier): void;
export declare type IContextMenuItem = contextMenu.IContextMenuItem;
export declare type IContextMenuContributor = contextMenu.IContextMenuContributor;
export declare function registerContributor(contributor: IContextMenuContributor): void;
export declare function calculateMenuItemsTree(): IContextMenuItem[];
export declare function intializeStandardActions(): void;
export declare function initializeActionBasedMenu(selector?: string): void;
