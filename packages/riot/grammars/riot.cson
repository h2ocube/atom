'scopeName': 'source.riot'

'name': 'HTML (Riot)'

'fileTypes': [
    'html'
    'tag'
    'riot.tag'
    'riot.html'
]

'patterns': [
    {
        'begin': '(</?)((?i:ng-(form|include|pluralize|transclude|view|messages|message))\\b)'
        'beginCaptures':
            '1':
                'name': 'punctuation.definition.tag.begin.html'
            '2':
                'name': 'entity.name.tag.block.any.html.riot'
        'end': '(>)'
        'endCaptures':
            '1':
                'name': 'punctuation.definition.tag.end.html'
        'name': 'meta.tag.block.any.html'
    }
    {
        'begin': '(</?)((?i:' +
            'address|article|aside|applet|' +
            'blockquote|center|' +
            'dir|div|dl|dt|dd|' +
            'fieldset|footer|form|frame|frameset|' +
            'header|hr|h1|h2|h3|h4|h5|h6|' +
            'iframe|' +
            'menu|nav|noframes|' +
            'object|ol|' +
            'p|pre|' +
            'section|ul' +
          ')\\b)'
        'beginCaptures':
            '1':
                'name': 'punctuation.definition.tag.begin.html'
            '2':
                'name': 'entity.name.tag.block.any.html'
        'end': '(>)'
        'endCaptures':
            '1':
                'name': 'punctuation.definition.tag.end.html'
        'name': 'meta.tag.block.any.html'
        'patterns': [
            { 'include': '#riot-directive-attribute' }
            { 'include': '#tag-stuff' }
        ]
    }
    {
        'begin': '(</?)((?i:'+
            'a|a|abbr|acronym|area|' +
            'b|base|basefont|bdo|big|body|br|button|' +
            'caption|cite|code|col|colgroup|' +
            'del|dfn|' +
            'em|font|' +
            'head|html|' +
            'i|img|input|ins|isindex|' +
            'kbd|' +
            'label|legend|li|link|' +
            'map|meta|' +
            'noscript|' +
            'optgroup|option|' +
            'param|q|' +
            's|samp|script|select|small|span|strike|strong|style|sub|sup|' +
            'table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|' +
            'u|var' +
            ')\\b)'
        'beginCaptures':
            '1':
                'name': 'punctuation.definition.tag.begin.html'
            '2':
                'name': 'entity.name.tag.inline.any.html'
        'end': '((?: ?/)?>)'
        'endCaptures':
            '1':
                'name': 'punctuation.definition.tag.end.html'
        'name': 'meta.tag.inline.any.html'
        'patterns': [
            { 'include': '#riot-directive-attribute' }
            { 'include': '#tag-stuff' }
        ]
    }
    { 'include': '#riot-expressions' }
    { 'include': 'text.html.basic' }
]

'repository':
    'riot-expressions':
        'begin': '(\\{)'
        'beginCaptures':
            '1':
                'name': 'punctuation.definition.block.begin.riot'
        'end': '(\\})'
        'endCaptures':
            '1':
                'name': 'punctuation.definition.block.end.riot'
        'name': 'meta.tag.template.riot'

    'patterns': [
        { 'include': 'source.js' }
    ]

    'embedded-code':
        'patterns': [
            {
                'include': '#smarty'
            }
            {
                'include': '#python'
            }
        ]

    'entities':
        'patterns': [
            {
                'captures':
                    '1':
                        'name': 'punctuation.definition.entity.html'
                    '3':
                        'name': 'punctuation.definition.entity.html'
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.html'
            }
            {
                'match': '&'
                'name': 'invalid.illegal.bad-ampersand.html'
            }
        ]

    'python':
        'begin': '(?:^\\s*)<\\?python(?!.*\\?>)'
        'end': '\\?>(?:\\s*$\\n)?'
        'name': 'source.python.embedded.html'
        'patterns': [
            {
                'include': 'source.python'
            }
        ]

    'smarty':
        'patterns': [
            {
                'begin': '(\\{(literal)\\})'
                'captures':
                    '1':
                        'name': 'source.smarty.embedded.html'
                    '2':
                        'name': 'support.function.built-in.smarty'
                'end': '(\\{/(literal)\\})'
            }
            {
                'begin': '{{|{'
                'disabled': 1
                'end': '}}|}'
                'name': 'source.smarty.embedded.html'
                'patterns': [
                    {
                        'include': 'source.smarty'
                    }
                ]
            }
        ]

    'string-double-quoted':
        'begin': '"'
        'beginCaptures':
            '0':
                'name': 'punctuation.definition.string.begin.html'
        'end': '"'
        'endCaptures':
            '0':
                'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.double.html'
        'patterns': [
            {
                'include': '#embedded-code'
            }
            {
                'include': '#entities'
            }
        ]

    'string-single-quoted':
        'begin': '\''
        'beginCaptures':
            '0':
                'name': 'punctuation.definition.string.begin.html'
        'end': '\''
        'endCaptures':
            '0':
                'name': 'punctuation.definition.string.end.html'
        'name': 'string.quoted.single.html'
        'patterns': [
            {
                'include': '#embedded-code'
            }
            {
                'include': '#entities'
            }
        ]

    'tag-generic-attribute':
        'match': '(?<=[^=])\\b([a-zA-Z0-9:-]+)'
        'name': 'entity.other.attribute-name.html'

    'tag-id-attribute':
        'begin': '\\b(id)\\b\\s*(=)'
        'captures':
            '1':
                'name': 'entity.other.attribute-name.id.html'
            '2':
                'name': 'punctuation.separator.key-value.html'
        'end': '(?<=\'|")|(?=\\s|>)'
        'name': 'meta.attribute-with-value.id.html'
        'patterns': [
            {
                'begin': '"'
                'beginCaptures':
                    '0':
                        'name': 'punctuation.definition.string.begin.html'
                'contentName': 'meta.toc-list.id.html'
                'end': '"'
                'endCaptures':
                    '0':
                        'name': 'punctuation.definition.string.end.html'
                'name': 'string.quoted.double.html'
                'patterns': [
                    {
                        'include': '#embedded-code'
                    }
                    {
                        'include': '#entities'
                    }
                ]
            }
            {
                'begin': '\''
                'beginCaptures':
                    '0':
                        'name': 'punctuation.definition.string.begin.html'
                'contentName': 'meta.toc-list.id.html'
                'end': '\''
                'endCaptures':
                    '0':
                        'name': 'punctuation.definition.string.end.html'
                'name': 'string.quoted.single.html'
                'patterns': [
                    {
                        'include': '#embedded-code'
                    }
                    {
                        'include': '#entities'
                    }
                ]
            }
            {
                'include': '#unquoted-attribute'
            }
        ]

    'tag-stuff':
        'patterns': [
            {
                'include': '#tag-id-attribute'
            }
            {
                'include': '#tag-generic-attribute'
            }
            {
                'include': '#string-double-quoted'
            }
            {
                'include': '#string-single-quoted'
            }
            {
                'include': '#embedded-code'
            }
            {
                'include': '#unquoted-attribute'
            }
        ]

    'unquoted-attribute':
        'match': '(?<==)(?:[^\\s<>/\'"]|/(?!>))+'
        'name': 'string.unquoted.html'
